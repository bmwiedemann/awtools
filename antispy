#!/usr/bin/perl

use strict;
use CGI ":standard";
BEGIN {chdir "/home/aw/inc";}
use awstandard;
use awinput;
use sort_table;
awinput_init();

my %options;
for my $p (qw'sort') {
   $options{$p}=param($p);
}
if(!defined $options{sort}){$options{sort}="5.-7";}

my $m=3; # SL margin
my $alli=$ENV{REMOTE_USER};
open(IN, "<", "datadir/spies-$alli");
my @spies=<IN>;
close(IN);
foreach(@spies) {$_=[split(/\t/,$_)]}

sub getbio {if($_[0] && $_[0]>100){return $_[1]} return $_[0]}
sub sortfunc {
   return ($$b[2]-$$b[4] <=> $$a[2]-$$a[4]);
}

print AWheader("possible spying [\U$alli]");
my @spies2;

foreach(@spies) {
   my($ename,$epid,$esl,$pid,$bio)=@$_;
   my @erel=getrelation($ename);
   my @esci=relation2science($erel[2]);
   my $ebio=getbio(@esci);
   my $eeffbio;
   if($ebio) {
      $eeffbio=$ebio+int((time-$esci[0])/86400); # estimation of current value
      if($eeffbio>$esl) { $eeffbio=$esl }
   } else {$eeffbio=$esl}
   next if($eeffbio && $bio && ($eeffbio<$bio+$m));
   if(!$ebio) {$ebio="?"};
   push(@spies2, [$epid,$esl,$ebio,$eeffbio,$pid,$bio, $eeffbio-$bio]);
}

print sort_table([qw(spy SL Bio xBio victim Bio diff)],
      [\&display_pid, \&display_string ,\&display_string, \&display_string, \&display_pid, \&display_string, \&display_string],
      [\&sort_pid, \&sort_num, \&sort_num, \&sort_num, \&sort_pid, \&sort_num, \&sort_num],
      sort_param_to_keys($options{sort}), \@spies2);

print AWtail();
