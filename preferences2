#!/usr/bin/perl -w
use strict;
use CGI ":standard";

use awstandard;
use awinput;
awstandard_init();
use DBAccess2;
#awinput_init();

our %options;
print AWheader("AW preferences tool");
my $name=getauthname();
my $authpid=getauthpid();
if(!$authpid) {
   print "Sorry, you can only use this tool when ".a({-href=>"authawforum?uri=/cgi-bin/preferences2"},"properly authenticated");
} else {
   if(param() && $ENV{REQUEST_METHOD} eq "POST") {
      foreach my $p (qw(p awfstyle awtstyle customhtml)) {
         $options{$p}=param($p);
#      if(defined($options{$p})){$options{$p}=~s/[^a-zA-Z0-9]//g;} # sanitize user input;
      }
      if($options{p}){$options{p}=~s/[^0-9-]//g;} # sanitize user input;
      if($options{awfstyle}){$options{awfstyle}=~s/[^a-zA-Z]//g;$options{awfstyle}=~s/^subBlack$//} # sanitize user input;
      if($options{awtstyle}){$options{awtstyle}=~s/[^a-zA-Z]//g;} # sanitize user input;
      my $dbh=get_dbh();
      my %h;
      tie %h,'Tie::DBI',$dbh,'playerprefs','pid',{CLOBBER=>1};
#      my $sth=$dbh->prepare("UPDATE `playerprefs` SET `tz` = ? , `forumstyle` = ? , customhtml = ? WHERE `pid` = ?");
#      my $res = $sth->execute($options{p}, $options{awfstyle}, $options{customhtml}, $authpid);
      my %data=%{$h{$authpid}||{}};
      $data{tz}=$options{p};
      $data{forumstyle}=$options{awfstyle};
      $data{awtoolsstyle}=$options{awtstyle};
      $data{customhtml}=$options{customhtml};
      $data{storeir}=param("storeir");
      $data{storepw}=param("storepw");
      $data{forumauth}=param("forumauth");
      $h{$authpid}=\%data;
      print "data saved";
   } else {
      my $prefs=awinput::getuserprefs($authpid);
      if($prefs) {
         my($pid,$tz,$customhtml,$forumstyle, $awtoolsstyle, $storeir, $storepw, $forumauth)=@$prefs;
         param("p",$tz);
         param("awfstyle",$forumstyle);
         param("awtstyle",$awtoolsstyle);
         param("customhtml",$customhtml);
         param("storeir",$storeir);
         param("storepw",$storepw);
         param("forumauth",$forumauth);
      }
      print start_form(-name=>"form"),textfield(-name=>'p', -class=>'text')," TimeZone",br,
         popup_menu(-name=>'awfstyle', -values=>[qw(subBlack subSilver)])," AW forum style",br,
         popup_menu(-name=>'awtstyle', -values=>["",qw(blue aw plain)])," AWTools style",br,
			checkbox(-name=>'storepw', -value=>1), ' auto-update player\'s <a href="userpasswd">AWTools-password</a> from AW',br,
			checkbox(-name=>'forumauth', -value=>1), ' allow log in with <a href="authawforum">AW-forum user+pass</a>',br,
			(is_extended()?():(checkbox(-name=>'storeir', -label=>'Store IR for basic brownie user (for use in planets and travel-time prediction)', -value=>1),br)),
			
         textarea(-name=>'customhtml', -cols=>40, -rows=>9, -class=>'text'), " custom HTML here",br,
         submit(-name=>"save", -class=>'smbutton'),end_form.AWfocus("form.p");
   }
}
print br,"The major difference of this tool compared to <a href=\"preferences\">preferences</a> is that this one does not store data in cookies, but in a DB on the server. Thus changes will also apply to other machines where you log in.",br,
'Note: Passwords are not stored in plaintext, but <a href="http://en.wikipedia.org/wiki/Cryptographic_hash_function">hashed</a> so that attackers stealing the database would need to guess them.';
print AWtail();

