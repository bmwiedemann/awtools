#!/usr/bin/perl
# safe 070204
use strict;
use CGI qw":standard *table";

use awstandard;
use awinput;
awinput_init();
use bbcode;
use sort_table;
use DBAccess;
use awbuilding;

my %options;
for my $p (qw'alliance sort omit') {
	$options{$p}=param($p);
}
$options{omit}=~s/[^ 0-9]//g; # sanitize user input
$options{alliance}=~s/[^A-Za-z]//g; # sanitize user input

our $now=time();
sub display_relmin($)
{
	my($idle)=@_;

	if(!$idle) { return "-" }
	sprintf("%im",($now-$idle)/60);
}

print AWheader("\U$options{alliance}\E alliance info [\U$ENV{REMOTE_USER}]", 
      '<link rel="stylesheet" type="text/css" href="/code/css/alliance.css" />'
#      border-left: 1px solid gray;  
#      border-bottom: 1px solid gray; } </style>
);
if(!defined $options{sort}){$options{sort}="-8.15.2";}

if($options{alliance}) {
	my $alli="\U$options{alliance}\E";
	my $aid=alliancetag2id($alli);
	if(!$aid) {
		print "unknown alliance".AWtail;
		exit(0); # modperl OK
	}
   my @displayfuncs=
         (\&display_string, \&display_pid, \&display_sid, 
           \&display_string, \&display_string, \&display_string, \&display_string, \&display_needplanets, \&display_string, \&display_string, \&display_string, \&display_string, 
           \&AWisodatetime, \&display_string, \&display_etc, \&display_string, \&display_relmin);
   foreach(split / /, $options{omit}) {
      $displayfuncs[$_-1]=undef;
   }
	my $n=0;
	my $own=("\L$alli" eq $ENV{REMOTE_USER});
#   "SELECT * FROM `cdlive`,`player`,`alliances` WHERE
#      alliance = aid AND player.pid=cdlive.pid AND tag LIKE ?"
   my @alliancepoints;

# header
	my $alliref=getalliance($aid);
   my $forumlink=$alliref->{url}||"";
   my $allitag=$alliref->{tag}||"";
   my $alliname=$alliref->{name}||"";
   my $members=$alliref->{members}||"";
   if($forumlink) {$forumlink=" URL:".a({class=>"othertool", -href=>$forumlink}, $forumlink)}
	my $rellink=qq! <a href="allirelations?p=$alli"><img src="/images/aw/relations-colored.gif" title="alliance info" alt="alliance info" /></a> !;
   my @members=allianceid2members($aid);
   my @rel=getallirelation($allitag);
   my $info=$rel[1]||"";
	print a({class=>"aw", -href=>"http://$awserver/rankings/alliances/$allitag.php"},"$alliname (AW)").$rellink." "
   #.a({-href=>"http://azgharde.celeonet.fr/tools/alliances.php?tag=$alli"},"azgharde")
      .a({class=>"othertool", -href=>"http://filix.exx.pl/aw/players.php?alli=$aid"},"filix")." "
      .a({class=>"othertool", -href=>"http://www.astrowars-tools.com/info.php?aTag=$alli"},"Rasta")
      ." ".a({class=>"aw", -href=>"http://$awserver/0/Alliance/Info.php?tag=$alli"}, "AW")
      .$forumlink.br."\n$alli members (".scalar @members."/$members) ".bbcode_trans($info).br;

   my @members2;
   my @membernames;
   
	my @totalprod=(0,0,0);
	my @totalres=(0,0);
   my $totalcul=0;
   my $totalpl=0;
	for my $pid (@members) {
		my $p=getplayer($pid);
		next if ! defined($p);
		next if $$p{alliance} ne $aid;
		my $name=playerid2name($pid);
      push(@membernames, $name);

      my $etc=awinput::playerid2etc($pid)||"";
		my $alink="";
		my $planets=playerid2planetsm($pid);
		my $joined=gmtime($$p{joined});#." ".$$p{joined};
		my ($x,$y)=systemid2coord($$p{home_id});
		my $home="$$p{home_id}($x,$y)";
		my @rel=getrelation($name);
      my ($race,$science)=playerid2ir($pid);
#      my @race=relation2race($rel[2]);
      my @science=@$science;#relation2science($rel[2]);
		my @prod=@{playerid2production($pid)};
      my $bonus=pop(@prod);
		{ my $n=0;
                        foreach(@prod[0..2]) { $_*=$$bonus[$n]; $totalprod[$n]+=$_; $n++}
                        for(0..1) { $totalres[$_]+=$prod[$_+5];}
                }
		if($own) { $alink=alliancedetailslink($n) }
      my $intel="-";
      my $bio25=0;
      if($science && defined($science[0]) && $science[0]>100) {
         $intel=int((time()-$science[0])/3600/24)."d";
         if($science[1]>=25) {$bio25=1}
      }
      if($race && defined($race->[0])) {
         my $cur=pop(@$race);
         $race->[7]=".+".(-int($race->[7]));$intel=join("",@$race)." ".$intel;
         if(!$cur) {$intel=div({-style=>"color:gray"},$intel)}
      }
      if($bio25) {$intel=div({-style=>"color:green"},$intel)}
      my $cplanets="$planets/$$p{culture}";
      $totalcul+=$$p{culture};
      $totalpl+=$$p{level};
      my $needplanets=$$p{culture}-$planets;
      my $links=profilelink($pid). $alink;

		my $prediction=predict_points($pid);
		my $pointsstr="$$p{points}(#$$p{rank})";
		if($prediction) {
			my($fpop,$ipop,$sci,$pl)=@$prediction;
			$pointsstr.=" &gt;".($ipop+$sci+$pl);
		}

      my $incomings=0;
      my $sth=$dbh->prepare("SELECT count(owner) 
            FROM `fleets`,`planets`
            WHERE alli=? AND fleets.sidpid=planets.sidpid AND planets.ownerid=? AND planets.ownerid!=fleets.owner AND iscurrent=1 AND eta > 0
      ");
      my $res=$dbh->selectall_arrayref($sth, {}, $ENV{REMOTE_USER}, $pid);
      $incomings=${$$res[0]}[0];
      push(@members2, [$links, $pid, $$p{home_id}, $$p{level}, $$p{science}, $$p{culture}, $$p{trade},
            $needplanets, $pointsstr, $n+1, $$p{logins}, playerid2country($pid), $$p{joined}, $intel, $etc, $incomings, awinput::getlastlog($pid)]);
		$n++;
	}
	#print " ".a({-href=>"relations-bulk?user=".join("%0a",@membernames)."&alliance=$options{alliance}"},"edit relations for all members");
	print sort_table([qw"links name home pl sl cl tr", '<span title="number of planets needed">need</span>', qw"pts(rank) arank log from joined intel ETC inco idle"],
         \@displayfuncs,
         [undef, \&sort_pid, \&sort_num, \&sort_num, \&sort_num, \&sort_num, \&sort_num, 
           \&sort_num, \&sort_num, \&sort_num, \&sort_num, \&sort_string,
           \&sort_num, \&sort_string, \&sort_num, \&sort_num, \&sort_num],
         sort_param_to_keys($options{sort}), \@members2 );


   my $livealliscore=getlivealliscores($aid);
   if(@members>0) {
      # footer
      @alliancepoints=@$livealliscore;
      if(scalar @alliancepoints == scalar @members) {
         my $counted=$members;
         if($counted>=10) {$counted-=int(($counted-5)/5)}
#         @alliancepoints = reverse sort @alliancepoints;
#print "$counted: @alliancepoints\n".br;
         my $sum=0;
			my $maxindex=(($counted>=@alliancepoints)?@alliancepoints-1:$counted-1);
			if($counted<5) {$counted=5}
         foreach(@alliancepoints[0..$maxindex]) { $sum+=$_ }
         printf "current alliance score: %.2f (counting %i members)".br,($sum/$counted, $counted);
         
      }
      printf "average culture: %.2f".br,($totalcul/@members);
      printf "average PL: %.2f".br,($totalpl/@members);
      if($totalprod[0]) {
         print "total hourly production/science/culture: ".join(" / ", @totalprod).br;
         print "total saved A\$ / PP: ".join(" / ", @totalres).br;
      }
		print hr,"note: pl=player level ; sl=science level ; cl=culture level ; tr=trade revenue"
   }
} else {
	print start_form(-method=>'get', -name=>"form"), textfield(-name=>'alliance', -class=>'text'), " alliance tag", br,
    textfield(-name=>'omit', -class=>'text', -value=>"10 13 16"), " omit field # (space separated list)", br, br,
	 submit(-name=>"query", -class=>'smbutton'),end_form.AWfocus("form.alliance");
}
print AWtail();
