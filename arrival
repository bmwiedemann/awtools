#!/usr/bin/perl

use strict;
use CGI ":standard";
chdir "/home/bernhard/code/cvs/perl/awcalc";
require "arrival.pm";
require "standard.pm";

my %options=qw;
racespeed 0
energy 0
distance 0
planet 0
own 0
;;

print AWheader('Arrival time calculator');
if(param()) {
	for my $p (qw'planet distance own energy racespeed') {
	  $options{$p}=param($p);
	}
	my $time=traveltime(\%options);
	my $h=int($time);
	my $m=int(($time-$h)*60);
	print "distance/planets: $options{distance} / $options{planet}".br."energy/speed: $options{energy} / $options{racespeed}".br."allied destination: ".($options{own}?"yes":"no").p;
	printf "time %.3fh = %2i:%.2i".br, $time, $h, $m;
	my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = gmtime(time()+$time*3600);
	$year+=1900;$mon++;
	printf "ETA %.2i.%.2i.%i %2i:%.2i:%.2i GMT".br, $mday,$mon,$year, $hour,$min,$sec;
} else { 
	print start_form('get'),
	textfield('planet'), " Planet diff", br,
	textfield('distance'), " <a href=\"distsqr\">Dist sqr</a>", br,
	textfield('energy'), " Energy lvl", br,
	popup_menu(-name=>'racespeed', -values=>[-4..4], -default=>0), " Race speed mod", br,
	checkbox(-name=>'own', -label=>''), " Own destination", br,
	  submit, end_form, p.'When going from Planet a in System A(x/y) to Planet b in System B(X/Y) then '.br.'Planet diff is the absolute of a-b  and  Dist sqr is (x-X)<sup>2</sup>+(y-Y)<sup>2</sup>'.br.'Energy level accepts fractions like 10.5'.br.'leaving fields blank counts as zero'.br;
}
print end_html;

