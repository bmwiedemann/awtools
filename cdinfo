#!/usr/bin/perl -w
use strict;
use CGI ":standard";

use Fcntl qw(:flock O_RDWR O_CREAT O_RDONLY);


use awstandard;
use awinput;
#awstandard_init();
#awinput_init();

our %options;
if(param()) {
	foreach my $p (qw(p)) {
		$options{$p}=param($p);
	}
   if($options{p}){$options{p}=~s/[^0-9]//g;} # sanitize user input;
   my $p=$options{p};
   print header("text/plain");
   if($p==1) {
      my %points;
      awinput::opendb(O_RDONLY, "$awstandard::dbmdir/points.dbm", \%points);
      foreach(sort keys %points) {
         print "$_\t$points{$_}\n";
      }
      untie %points;
   } elsif($p==2) {
      my $dbh=get_dbh;
      my $res=$dbh->selectall_arrayref("
            SELECT *
            FROM `cdcv` 
         ");
      foreach(@$res) {
         print join("\t", @$_),"\n";
      }
   } elsif($p==3) {
      my $dbh=get_dbh;
      my $res=$dbh->selectall_arrayref("
            SELECT *
            FROM `cdlive` 
         ");
      foreach(@$res) {
         print join("\t", @$_),"\n";
      }
   }
} else {
   print AWheader("AW CD data tool");
	print start_form(-name=>"form", -method=>"get"),
#      textfield(-name=>'p', -class=>'text'),br,
      popup_menu(-name=>'p',-values=>[2..3], -labels=>{1=>"score",2=>"CV",3=>"points+PL"})," type of dump",br,
		submit(-name=>"query", -class=>'smbutton'),end_form.AWfocus("form.p");
#   print AWtail();
}

