#!/usr/bin/perl
# safe 070204
use strict;
use CGI ":standard";


use awstandard;
use awinput;
#use awmap;
use awmapcgi;
awstandard_init();

sub round($) {int($_[0]+0.5)}

my $maptypes=\%awmapcgi::maptypestring;

my $alli=$ENV{REMOTE_USER};
#if(!$ENV{REMOTE_USER}) {$ENV{REMOTE_USER}="af"}
my $title="tiled live tactical map [\U$alli\E]";
my %options;

for my $p (qw'xs xe ys ye scale type') {
	$options{$p}=param($p);
}
if(!$options{scale} || $options{scale}!~m/^[0-9.]+$/) { $options{scale}=2; }
foreach my $p (qw(xs xe ys ye)) {
   $options{$p}=~s/[^-+0-9]//g; #sanitize, because we use those vars verbatim later
}
if(!defined($options{type}) || $options{type}!~m/^[0-9,]+$/) {$options{type}="0,1,2"}
my $imgsize=bmwround($options{scale}*13);

awinput_init(1);
print header(-connection=>"Keep-Alive", -keep_alive=>"timeout=15, max=99", -expires=>awstandard::HTTPdate(time()+24*3600));
if(defined($options{xs}) && !($options{xe}<0 || $options{ye}<0 || $options{xe}>100 || $options{ye}>100))
{
	print AWheader2($title, qq(<style type="text/css"><!-- img {border:0;} --></style>));
	my $xe=round($options{xs}+$options{xe}/2);
	my $ye=round($options{ys}+$options{ye}/2);
	my $xs=$xe-$options{xe};
	my $ys=$ye-$options{ye};
	print qq!<table border="0" cellspacing="0" cellpadding="0" bgcolor='#000000'>!;
	for(my $my=$ys; $my<$ye; $my++) {
		print "<tr>";
		for(my $mx=$xs; $mx<$xe; $mx++) {
#			print "<td> $mx,$my</td>"
			my $f; # image file to link
         my $sysexists=systemcoord2id($mx,$my);
			my $link="";
			my $linkend="</a>";
			if(!$sysexists) {my $n=0;
				if($mx%10<=1) {$n|=2}
				if($my%10<=1) {$n|=1}
				if($mx%10==0||$my%10==0) {$n=3}
				$f="/code/images/aw/$n.gif";
				$link=qq!<a href="?xs=$mx&amp;ys=$my&amp;xe=$options{xe}&amp;ye=$options{ye}&amp;scale=$options{scale}&amp;type=$options{type}">!;
			} else {
            $f="/cgi-bin/tactical-live-tile?x=$mx&amp;y=$my&amp;o=$options{type}";
				$link=qq!<a href="system-info?mapx=$mx&amp;mapy=$my">!;}
			my $formatstr="";
			if(1||$my==$ys || $mx==$xs) {$formatstr=qq! height="$imgsize" width="$imgsize"!}
			print qq!<td>$link<img src="$f"$formatstr alt="" />$linkend</td>!;
		}
		print "</tr>\n";
	}
	print "</table>";
   awinput::awinput_finish();
} else {
	print AWheader2($title);
	print start_form(-method=>'get', -name=>"form"), 
    awmapcgi::awmapcoordinput(),
    popup_menu(-name=>'scale',-values=>[1,1.5,2,2.5,3,4], -default=>2)," scaling factor",br,
    popup_menu(-name=>'type',-values=>[sort keys %$maptypes],-labels=>$maptypes, -default=>"0,6,1,2"), " type of map",br,
#    checkbox(-name=>'fast', -label=>'fast', -checked=>1, -value=>'1'), " - uncheck when images are missing",br,
	 submit(-name=>"draw", -class=>'smbutton'), end_form();
   awinput::awinput_finish();
}
print end_html;
