#!/usr/bin/perl

use strict;
use CGI ":standard";
BEGIN {chdir "/home/aw/inc";}
use awstandard;
use awinput;
use sort_table;
awinput_init();

my $alli=$ENV{REMOTE_USER};
my %options;
for my $p (qw'sort sid') {
   $options{$p}=param($p);
}
if(!defined $options{sort}){$options{sort}="-6.-7.8";}
my $sysid=$options{sid};
my @sysxy=systemid2coord($sysid);
if(!defined($sysxy[0])) {
   print AWheader("$sysid not found");
   exit(0);
}

open(IN, "whocansee.pl $sysid $alli |") or die $!;
my @data=<IN>;
close(IN);
foreach(@data) {$_=[split(/ /,$_)]}

print header().AWheader3("Who can see $sysid [\U$alli]", 
      "Who can see system ".a({-href=>"system-info?id=$sysid"},$sysid)." [\U$alli]");
#      " system ".a({-href=>"system-info?id=$sysid"},$sysid);


my @data2;
foreach(@data) {
	my($x,$y,$ename,$epid,$esl,$ebio,$rel)=@$_;
   my $dist=sprintf("%.2f", sqrt(($x-$sysxy[0])**2 + ($y-$sysxy[1])**2));
   $rel||=4;
   my $etc=awinput::playername2etc(playerid2name($epid));
   my $p=$player{$epid};
   my $planets=playerid2planets($epid);
   my $needplanets=$$p{culture}-$planets;
   push(@data2, [$epid, $x, $y, $ebio, $dist, $rel, $needplanets, $etc]);
}
 
print sort_table([qw(who x y bio dist relation need ETC)],
         [\&display_pid, \&display_string, \&display_string, \&display_string, \&display_string, \&display_string, \&display_needplanets, \&display_etc],
         [\&sort_pid, \&sort_num, \&sort_num, \&sort_num, \&sort_num, \&sort_num, \&sort_num, \&sort_num],
         sort_param_to_keys($options{sort}), \@data2);

print AWtail();
