#!/usr/bin/perl
# safe 070204
use strict;
use CGI ":standard";

use awstandard;
use awinput;
use awsql;
use arrival;
use sort_table;
use DBAccess;
awinput_init(1);

if(param) {
my $alli=$ENV{REMOTE_USER};
my %options;
for my $p (qw'sort sid bio25') {
   $options{$p}=param($p);
}
if(!defined $options{sort}){$options{sort}="-6.-7.8";}
my($sysid)=($options{sid}=~m/(\d+)/);
my $wantbio25=($options{bio25}!=0);
my @sysxy=systemid2coord($sysid);
if(!defined($sysxy[0])) {
   print AWheader("$sysid not found").AWtail();
   exit(0); # modperl OK
}



my ($allimatch, $amvars)=get_alli_match2($ENV{REMOTE_USER},4);
my $sql="SELECT player.pid,starmap.x,starmap.y,biology,speed,energy FROM toolsaccess,starmap,player LEFT JOIN (
   SELECT * FROM intelreport
   ORDER BY `modified_at` DESC
) AS ir ON ir.pid=player.pid
WHERE player.home_id=starmap.sid 
AND (
	(starmap.x=? AND starmap.y=?) 
	OR (ABS(starmap.x-?)<=biology/2 AND ABS(starmap.y-?)<=biology/2 AND racecurrent>0) 
	OR (?>0 AND biology>=25 AND racecurrent>0)
) AND $allimatch
GROUP BY player.pid
";
my $sth=$dbh->prepare_cached($sql);
my $data=$dbh->selectall_arrayref($sth, {}, @sysxy,@sysxy, $wantbio25||0, @$amvars);

print AWheader("Who can see $sysid [\U$alli]"),
      "system ".a({-href=>"system-info?id=$sysid"},$sysid),br;
#      " system ".a({-href=>"system-info?id=$sysid"},$sysid);

#print "$sql<br>".scalar(@$data)." entries<br>";
#foreach my $row(@$data) { print "@$row\n<br>"; }


$wantbio25=!$wantbio25;
print a({-href=>"?sid=$sysid&bio25=$wantbio25"},($wantbio25?"in":"ex")."clude bio25 players").br;


my @data2;
foreach my $row (@$data) {
	my($epid,$x,$y,$ebio,$speed,$energy)=@$row;
	my($rel)=awinput::playerid2relation($epid);
	my $xe=arrival::effectiveenergy($speed,$energy);
   my $dist=sprintf("%.2f", sqrt(($x-$sysxy[0])**2 + ($y-$sysxy[1])**2));
   $rel||=4;
   my $etc=awinput::playerid2etc($epid);
   my $p=$player{$epid};
   my $planets=playerid2planetsm($epid);
   my $needplanets=$$p{culture}-$planets;
   push(@data2, [$epid, $x, $y, $ebio, $dist, $rel, $needplanets, $etc, $xe]);
}
 
print sort_table([qw(who x y bio dist relation need ETC xE)],
         [\&display_pid, \&display_string, \&display_string, \&display_string, \&display_string, \&display_relation, \&display_needplanets, \&display_etc, \&display_round1],
         [\&sort_pid, \&sort_num, \&sort_num, \&sort_num, \&sort_num, \&sort_num, \&sort_num, \&sort_num, \&sort_num],
         sort_param_to_keys($options{sort}), \@data2);

} else {
   print AWheader("who can see");
   print start_form(-name=>"form", -method=>"get"),textfield(-name=>'sid', -class=>'text'),br,
               submit(-name=>"query", -class=>'smbutton'),end_form.AWfocus("form.sid");
}
print AWtail();
