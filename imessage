#!/usr/bin/perl -w
# safe 20070210
use strict;
use CGI ":standard";


use awstandard;
use awinput;
use bbcode;
use sort_table;
use awimessage;
#awstandard_init();
awinput_init();

our %options;
my $authname=awinput::getauthname();
our $authpid=playername2idm($authname);

sub display_delim
{ 
   return a({-href=>"?action=delete&imid=$_[0]"},"del")
}

sub display_impid($)
{
   ($_[0] == $options{authpid}?"":
      a({-href=>"?action=send&recv=$_[0]"},"rep")." ").display_pid($_[0]);
}

sub display_tztime($)
{ my($t)=@_;
   $t+=$timezone*3600;
   AWisodatetime($t);
}

sub imlist(%)
{ my($options)=shift;
   my $ims=awimessage::get_all_ims($options);
   foreach my $row (@$ims) {
#     my ($imid,$time,$sendpid,$recvpid,$msg)=@$row;
#     print "$imid,$time,$sendpid,$recvpid,$msg\n";
      my $class="recvimessage";
      if($row->[2]==$authpid) {$class="sentimessage"};
      $row->[4]="<span class=\"$class\">".($row->[4])."</span>";
   }
   sort_table(
         [qw(del time-sent from to msg)],
         [\&display_delim,\&display_tztime,\&display_impid, \&display_impid, \&bbcode_trans],
         [undef,\&sort_num,\&sort_pid,\&sort_pid,undef],
         sort_param_to_keys($$options{sort}),$ims
      );
}

my $admin=is_admin;

print AWheader("Brownie Instant Messaging tool");
if(!$authpid) {
   print "Sorry, you can only use IMs when ".a({-href=>"authawforum?uri=/cgi-bin/imessage"},"properly authenticated");
} else {
   %options=(); # clear global var from last mod-perl loop
   $options{authpid}=$authpid;
	foreach my $p (qw(action imid msg recv sort alli)) {
		$options{$p}=param($p);
	}
   if(!$options{sort}){$options{sort}="2";} # default sort by time
   if(!$options{action} || $options{action}=~m/[^a-z_-]/){$options{action}="list";}
   if($options{alli}) {$options{alli}=~s/[^a-z]//g}
   if($options{recv} && $options{recv}=~m/[^0-9]/) { $options{recv}=playername2idm($options{recv}); } # counts as sanitizing
   my $subtools="";
   my @tlist=qw(send list delrecv delsent);
   if(is_extended()) {
      push(@tlist,"sendalli", "sendteam");
   }
   if($admin) {
      push(@tlist,"sendall", "sendotheralli", "sendotherteam");
   }
   foreach my $t (@tlist) {
      $subtools.=a({-href=>"?action=$t"}, $t)." ";
   }
   print $subtools,br;
   print a({-href=>"http://www.astrowars.com/forums/privmsg.php"},"AW inbox"),br;
   if($admin && ($options{action} eq "sendotheralli" || $options{action} eq "sendotherteam")) {
      if($options{msg}){
         my $to=awinput::get_team_pids($options{action} eq "sendotherteam", $options{alli});
         foreach my $r (@$to) {
            $options{recv}=$r;
#            print "$options{recv} ";
            print awimessage::send(\%options),br;
         }
         print "sent msg to ",scalar @$to,br;
      } else {
         print "send a message to a whole team/alliance (who use brownie)",br,
               start_form(-name=>"form"),
               textfield(-name=>'alli', -class=>'text', -size=>6)," Receiving Alli",br,
               textarea(-name=>'msg',-value=>"", -cols=>40, -rows=>9, -class=>'text'),br,
               hidden(-name=>"action",-value=>"sendall"),
               submit(-value=>"send", -class=>'smbutton'),end_form.AWfocus("form.msg");
      }
   }
   elsif($admin && $options{action} eq "sendall") {
      if($options{msg}){
         my $to=awinput::get_all_brownie_pids();
         foreach my $r (@$to) {
            $options{recv}=$r->[0];
#print "$options{recv} ";
            print awimessage::send(\%options),br;
         }
         print "sent msg to ",scalar @$to,br;
      } else {
         print "send a message to all brownie users",br,
               start_form(-name=>"form"),
               textarea(-name=>'msg',-value=>"", -cols=>40, -rows=>9, -class=>'text'),br,
               hidden(-name=>"action",-value=>"sendall"),
               submit(-value=>"sendall", -class=>'smbutton'),end_form.AWfocus("form.msg");
      }
   }
   elsif($ENV{REMOTE_USER} and ($options{action} eq "sendalli" or $options{action} eq "sendteam")) {
      if($options{msg}){
         my $to=awinput::get_team_pids($options{action} eq "sendteam");
         foreach my $r (@$to) {
            $options{recv}=$r;
#            print "$options{recv} ";
            print awimessage::send(\%options),br;
         }
         print "sent msg to ",scalar @$to,br;
      } else {
         print "send a message to all your team/alliance members (who use brownie)",br,
               start_form(-name=>"form"),
               textarea(-name=>'msg',-value=>"", -cols=>40, -rows=>9, -class=>'text'),br,
               hidden(-name=>"action",-value=>"sendall"),
               submit(-value=>"send", -class=>'smbutton'),end_form.AWfocus("form.msg");
      }
   }
   elsif($options{action} eq "delrecv" or $options{action} eq "delsent") {
      print awimessage::delete_all_x(\%options);
   } 
   elsif($options{action} eq "send") {
      if($options{recv} && $options{msg} && playerid2namem($options{recv})){
         print awimessage::send(\%options);
      } else {
         print start_form(-name=>"form"),textfield(-name=>'recv', -class=>'text', -size=>6)," Player ID or name",br,
               textarea(-name=>'msg',-value=>"", -cols=>40, -rows=>9, -class=>'text'),br,
               hidden(-name=>"action",-value=>"send"),
               submit(-value=>"send", -class=>'smbutton'),end_form.AWfocus("form.recv");
      }
   }
   elsif($options{imid} && $options{action} eq "delete") {
      $options{imid}=~s/[^0-9]//g;
      awimessage::delete(\%options);
   }

   print imlist(\%options), p("Messages expire after 2 weeks. But you can always delete them earlier. sendteam is like sendalli, but includes other alliances that share fleet info with you.");
}
print AWtail();

