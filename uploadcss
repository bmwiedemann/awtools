#!/usr/bin/perl -w

use strict;
use lib("/home/aw/inc");
use vars qw"$cgi $serverbase $imagedir $errormessage %allowedext";
use IO::File;
use CGI ":standard";
use CGI::Carp 'fatalsToBrowser';
$CGI::POST_MAX=1024*31;

use awstandard;
use awinput;
awinput_init();
my $authname=safe_encode(awinput::getauthname());

$serverbase="http://aw.lsmod.de";
$imagedir="/code/css/user/";
%allowedext=qw(css 1);

sub process {
	my ($filename,$name,$newname,$buffer,$bytesread,$fullname,$outfile,$ext)=(param("file"),lc(param("name")));
	$name=~s".*/"";
	if($name eq ""){$name=$filename}
$name=~s"^.*[/\\]"";	if($filename=~m/\.([^.]+)$/ && ($allowedext{$1}||return ".$1 - invalid extension")){$ext=$1}
	if($name=~m/\.([^.]+)$/&& !$allowedext{$1}){return "invalid format"}
	if($name!~m"^[\w.0-9-]+$"){return "invalid name"}
# filename check for invalid .. / etc

# derive .jp[e]g / .gif from $filename, test for overwrite
	if($name!~/\./){$name.=".".$ext}
   local $imagedir="$imagedir$authname/";
   my $dirname="/home/aw/html/$imagedir";
   mkdir($dirname);
	$newname="$dirname$name";
#	if(-r $newname){return "Die Datei existiert bereits!"}
	$outfile = new IO::File $newname, O_WRONLY|O_CREAT|O_TRUNC;
	unless (defined($outfile)) {
	  return "error with $newname: $!";
	}
	while ($bytesread=read($filename,$buffer,1024)) {print $outfile $buffer;}
	undef $outfile;
	$fullname=$serverbase.$imagedir.$name;
	print AWheader("success"),
	qq|is now at: <a href="$fullname">$fullname<br></a>|;
	return "";
}

#print STDOUT header(-expires=>'+1m', -Cache_control=>"no-cache", -Pragma=>"no-cache");

if($authname && $authname eq "unknown") {
   $authname="";
}
if(!$authname) {
  $errormessage=a({-href=>"/manual/auth.html"},"authenticate first");
}
if(param() && $authname) {
  $errormessage=process();
}
my $authstr=$authname || "<span style=\"color:red\">no user</span>";
if(!param() or $errormessage) {
   print AWheader("Custom CSS Upload"),
         "Cascading Style Sheets (CSS) can be used to customize the look of AW pages. This tool is for HTML/CSS experts only. Authenticated: $authstr",br;
  if($errormessage) {
    print STDOUT (h1($errormessage),hr);
  }
  print STDOUT (
	start_multipart_form,
	filefield(-name=>"file", -class=>"file"),
	" Which file? (30KB max)".br,
	textfield(-name=>"name", -value=>"main.css", -class=>"text"),
	" name on server".br,
	submit(-class=>"smbutton", defined($authname)?():(-disabled=>1)),
	end_form);
}

print (AWtail);
