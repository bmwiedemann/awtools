#!/usr/bin/perl -w

use strict;
use CGI qw":standard *table";
my $title="trade partners [\U$ENV{REMOTE_USER}\E]";
chdir "/home/bernhard/code/cvs/perl/awcalc";
require "input.pm";
require "cgicommon.pm";
require "sort_table.pm";
print AWheader($title);

my %options;

for my $p (qw'sort') {
   $options{$p}=param($p);
}
if(!defined $options{sort}){$options{sort}="4.5";}

#print "test";
my @tap=gettradepartners(4, 5000);
my @tap2;
foreach my $entry (@tap) {
   my ($name, $ad, $prod, $partners)=@$entry;
   my $pid=playername2id($name);
   if(!$pid) {next}
   $name=playerid2name($pid);
   $$entry[0]=$name;
   my $time=(20000-$ad)/$prod;
   $$entry[1]=int($ad);
   $$entry[2]=int($prod);
   push(@$entry, sprintf("%.2f",$time), $pid);
   push(@tap2, $entry);
}

my $sortkeys=sort_param_to_keys($options{sort});

print sort_table([qw(name ad prod/h partners ready*h who)], 
         [undef, \&display_string, \&display_string, \&display_string, \&display_string, \&display_player],
         [\&sort_string, \&sort_num, \&sort_num, \&sort_num, \&sort_num, \&sort_pid],
         $sortkeys, \@tap2 );

print AWtail();
exit 0;

print ("<table><tr>".th("name").th("partners").th("ad").th("prod/h").th("ready in")."</tr>\n");

foreach my $entry (sort sortfunc @tap2) {
   my ($name, $ad, $prod, $partners, $time)=@$entry;
#print "@$entry\n".br;
   print "<tr>".td(a({-href=>"relations?name=$name"},$name)).td($partners).
      td($ad).td($prod).td($time." h")."</tr>\n";
}
print "</table>";

