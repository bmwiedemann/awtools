#!/usr/bin/perl
# safe 070205
use strict;
use CGI ":standard";

my $readonly=0;
#if($ENV{REMOTE_USER} eq "is") {$ENV{REMOTE_USER}="fun"; $readonly=1;} # TODO: only for beta10
use awstandard;
use awinput;
use arrival;
awinput_init();

my $title="manage relation [\U$ENV{REMOTE_USER}\E]";
my %options;

sub planetpopsort {return planet2pop($b)<=>planet2pop($a)}

print AWheader($title);
for my $p (qw'id name alliance relation comment submit') {
	$options{$p}=param($p);
}
if(defined($options{submit}) && $options{submit}=~/delete/) { $options{delete}=1 }
if($options{id}) { $options{name}=playerid2name($options{id}); param("name",$options{name}) }

if($options{comment}) {
   $options{comment} =~ s/[<>]//g;
}
if($options{alliance}) {
	$options{alliance} =~ s/[^a-zA-Z0-9._-]+//g;
}
if($options{name}) {
	$options{name} =~ s/[^a-zA-Z0-9.äöüÖÜÄß*û _!|{}\]\[-]+//g;
}

if(!$readonly && defined($options{relation})) {
   my $n=lc($options{name});
	$options{comment}=~s/\r//g;
	if(!$options{delete}) {
		if($options{alliance}=~/^\s*$/) {$options{alliance}="unknown"}
		$options{alliance} =~ y/a-z/A-Z/;
#		if($options{name} !~ /^[-_. a-z0-9\[\]*!|äöüÄÖÜû{}]*$/) { print 'illegal character in user name'; exit(0);} # redundant
		$options{relation}+=0;
		if($options{relation}<0 || $options{relation}>9 || $options{alliance} !~ /^[A-Z]*$/) { print "wrong input", AWtail; exit 0;} # modperl OK
	}
	my @rel=getrelation($options{name},1);
	my $mod=$rel[4] ? "modified" : "added";
	if($options{delete}) {
		setrelation($rel[5],undef);
		$mod="deleted";
	} else {
		setrelation($rel[5],{"name"=>$n, "status"=>$options{relation}, "atag"=>$options{alliance}, "info"=>$options{comment}});
	}
	print span({-style=>'color: darkgreen'},"$mod $options{name}"),br;
}

if($options{name}) {# && $options{name} ne "unknown") {
	my $user=$options{name};
#	$user =~ y/A-Z/a-z/;
	my $new="edit existing entry";
	my $id=playername2id($user);
	my $atag=playerid2tag($id);
	my @rel=getrelation($user);
	if(!$rel[4]) {
		$options{alliance}=$atag || "unknown";
		$options{comment}="";
		#print br."debug: @rel ".br;
		$options{relation}=$atag?0:($rel[0]||4);
		$options{realrelation}=$options{relation};
		$new=span({-style=>'color: red'},"user unknown - add new entry");
	} else {
		($options{relation},$options{alliance},$options{comment},$options{realrelation})=@rel;
	}
	
	my $extralinks="";
   {
      if($id>2 && (my $p=$player{$id})) {
      my($epl,$eenergy,$ephys,$emath,$espeed,$eatt,$edef)=awinput::playerid2battlestats($id);
      $espeed=~s/\+//;

      # get own stats
      my($oatt,$odef,$omath,$ophys,$opl)=(0,0,0,0,0);
      my $awuser=cookie('user');
      my $oid=playername2id($awuser);
      if($oid && $oid>2) {
         my @rel;
         my @race;
         my @science;
         $opl=$player{$oid}{level};
         @rel=getrelation($awuser);
         @race=relation2race($rel[2]);
         @science=relation2science($rel[2]);
         if($science[0]) { 
            if($science[0]>100) {shift @science}
            ($omath,$ophys)=@science[3,4];
         }
         if($race[0]) { 
            ($oatt,$odef)=@race[5,6];
         }
      }
        #$epl=$opl=0; # while bonus is not really working
      $extralinks=" ".
         a({-href=>"http://www.astrowars.com/about/battlecalculator/?des=0&destroyer=0&cru=0&cruiser=0&bat=0&battleship=0&sta=0&pphysics=$ephys&fphysics=$ophys&pmath=$emath&fmath=$omath&plevel=$epl&flevel=$opl&praceatt=$eatt&fraceatt=$oatt&pracedef=$edef&fracedef=$odef&submit2=calculate+battle&go=1"},img({-src=>"/images/aw/shield.png",-alt=>"defend"})).
         a({-href=>"http://www.astrowars.com/about/battlecalculator/?des=0&destroyer=0&cru=0&cruiser=0&bat=0&battleship=0&sta=0&pphysics=$ophys&fphysics=$ephys&pmath=$omath&fmath=$emath&plevel=$opl&flevel=$epl&praceatt=$oatt&fraceatt=$eatt&pracedef=$odef&fracedef=$edef&submit2=calculate+battle&go=1"},img({-src=>"/images/aw/sword.png",-alt=>"attack"}))." ".
         a({-href=>"arrival?energy=$eenergy&racespeed=$espeed"}, img({-src=>"/images/aw/shuttle.png",-alt=>"traveltime"}))." ".
              a({-href=>"http://www.astrowars.com/forums/profile.php?mode=viewprofile&u=".$id}, img({-src=>"/images/icon_profile.gif",-alt=>"forum-profile"}))." ".a({-href=>"imessage?action=send&recv=$id"}, img({-src=>"/images/aw/imessage.gif",-alt=>"IM"}))." ";
         if(getauthname() eq "greenbird") {
            $extralinks.=a({-href=>"playerbattles3?p=$id"},"PB3")." ";
         }
      }
   }
	$atag=$atag?" ".alliancelink($atag):"";
	print start_form(-name=>"form"), "$new: ". span({-style=>'color: '.getrelationcolor($rel[0])},"$user ($id)").$atag." ", profilelink($id), $extralinks, 
   #a({-href=>"http://azgharde.celeonet.fr/tools/player.php?name=".$user}, "azgharde")." ".
         a({-href=>"http://lefois.de/aw/tool/info.php?R_name=".$user}, "Lefois")." ".a({-href=>"http://www.lefois.de/aw/tool/battles.php?&days=all&R_pid=$id"},"battles")," ",a({-href=>"playeronline?name=$user"},"view idle/online"),br;
	print hidden(-name=>'name', $user);
	print textfield(-name=>'alliance', -value=>$options{alliance}, -class=>'text'), " alliance membership (e.g. unknown, TZAR, ES)", br,
	popup_menu(-name=>'relation', -values=>[0..9], -default=>$options{realrelation},
		-labels=>\%awstandard::relationname), " relation", br,
	textarea(-name=>'comment', -value=>$options{comment}, -class=>'text', -rows=>9, -cols=>40), " who added him, why, contact, intel, etc...", br,
	 submit(-name=>"submit", -class=>"smbutton")." "
    #.a({href=>"?"},"new query")." "
	 #.submit(-name=>"submit", -value=>"delete")
    #.AWfocus("form.relation")
	;
	if($id>2) {
		my @pl=playerid2planets($id);
		my $planets=@pl;
      my $pl=$player{$id};
		my $level=$$pl{level};
		my $pop=0;
		my @planets;
		foreach my $p (@pl) {
			my $pp=getplanet2($p);
			$pop+=planet2opop($pp);
			push(@planets, $pp);
		}
      my $trades="";
      {
         my @t=awinput::playerid2trades($id);
         $trades=join(", ", map {playerid2link($_)} @t);
      }
		print br,"pl=$level sl=$$pl{science} cl=$$pl{culture} points=$$pl{points} (".2*$level."+$pop+".($$pl{points}-$pop-2*$level).") trade=$$pl{trade}% logins=$$pl{logins} from=$$pl{from} joined=".(gmtime($$pl{joined}))." trades=$trades ";
#		require "guess.pm";
#		printf (br."race fighter%.4f ranker%.4f\n",guessrace([getpubdata($id)]));
		print br,$user," owns $planets planets<ul>";
		foreach my $pp (sort planetpopsort @planets) {
			my $sid=planet2sid($pp);
         my $s=planet2siege($pp);
			my ($x,$y)=systemid2coord($sid);
			my $link=a({-href=>"system-info?id=$sid"},systemid2name($sid));
			print li({-style=>"font-family: monospace;".($s?" background-color: red;":"")},sprintf(qq!(%2i,%2i) #%2i : pop=%2i SB=%2i $link\n!, $x, $y, planet2pid($pp), planet2pop($pp), planet2sb($pp)));
		}
		print "</ul>\n";
		my @race=relation2race($options{comment});
		if(defined($race[0])) {
			print p,"race: ",br;
			my $n=0;
         my $sum=pop(@race);
			foreach(@race) {
				my $bonus=$awstandard::racebonus[$n]*100*$_;
				if($bonus>=0) {$bonus="+".$bonus}
				print "$bonus% $awstandard::racestr[$n++] ($_)".br;
			}
         if($sum<=-9) {print "Banker".br;$sum+=9}
         if($sum<=-6) {print "Trader".br;$sum+=6}
         if($sum<=-1) {print "Start Up Lab".br;$sum+=1}
		}
		my @prod=relation2production($options{comment});
      my $bonus=pop(@prod);
		if(defined($prod[0])) {
			print p,"production/sci/cul:",br;
			my $n=0;
			foreach(@prod[0..2]) {
				my $total=int($_*$$bonus[$n]*24);
            my $totalh=int($_*$$bonus[$n]);
				print "$_ * $$bonus[$n++] = $totalh/h = $total/day\n".br;
			}
         if($prod[5]) {print "AD $prod[5]".br}
         if($prod[6]) {print "PP $prod[6]".br}
		}
		my @sci=relation2science($options{comment});
		if(defined($sci[0])) {
			print p,"science";
			my $n=0;
			if($sci[0]>100) {
				my $time=shift(@sci);
				print " from ".gmdate($time);
			}
			print ":<br />\n";
			foreach(@sci) {
            if($_>200) {print "ETC: ".AWtime($_).br;next}
				print "$awstandard::sciencestr[$n++] $_\n".br;
			}
		}
      if(0) {
         printf("xEnergy=%.2f ", arrival::effectiveenergy(1,2));
      }
      my @logins;
		while($options{comment}=~/login:(\d+):(\d+)([^ ]*)(.*)/s) {
			$options{comment}=$4;
         push(@logins, [$1,$2,$3]);
      }
      if($logins[0]) {
         print "<code>";
         my $firsti=awmax(-8,awmin((-$#logins-1), -1));
         foreach my $e (@logins[$firsti..-1]) { # last 8 values only
            my($login,$time,$extra)=@$e;
            my $color;
            if($extra=~/:(\d{5,}):/) { $color="darkred";
               if($1>60000) { $color="red" }
            }
            if($color) {
               $extra=span({-style=>"color:$color"},$extra);
            }
            printf(br."login %4i: %s GMT %s ; idle+accuracy %s", $login, AWisodatetime($time),AWreltime($time), $extra);
         }
         print "</code>";
      }
	}
} else {
	print start_form(-method=>'get', -name=>"form"), textfield(-name=>'name', -class=>'text'), " user name", br,
   "or",br,
   textfield(-name=>'id', -class=>'text').AWfocus("form.name"), " user ID",br,
	 submit(-name=>"query", -class=>'smbutton'),reset(-class=>'smbutton');
}
print end_form, AWtail();
#foreach(keys %ENV) {  print "$_ $ENV{$_}<br>";}

